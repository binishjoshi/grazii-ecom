{"ast":null,"code":"var _jsxFileName = \"/home/phoenix/grazii-ecom/src/components/cart-item/cart-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem, removeItem } from '../../redux/cart/cart.actions';\nimport { CartItemContainer, CartItemImage, ItemDetailsContainer, ArrowContainer, PriceContainer } from './cart-item.styles';\n\nconst CartItem = ({\n  cartItem,\n  removeItem,\n  addItem\n}) => {\n  const imageUrl = cartItem.imageUrl,\n        price = cartItem.price,\n        name = cartItem.name,\n        quantity = cartItem.quantity;\n  return React.createElement(CartItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(CartItemImage, {\n    src: imageUrl,\n    alt: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(ItemDetailsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, name), React.createElement(PriceContainer, {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(ArrowContainer, {\n    onClick: () => removeItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"\\u276E\"), React.createElement(\"span\", {\n    className: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, quantity), React.createElement(ArrowContainer, {\n    onClick: () => addItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"\\u276F\"), \" x $\", price)));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CartItem); // onClick={() => removeItem(cartItem)}\n// onClick={() => addItem(cartItem)}","map":{"version":3,"sources":["/home/phoenix/grazii-ecom/src/components/cart-item/cart-item.component.jsx"],"names":["React","connect","addItem","removeItem","CartItemContainer","CartItemImage","ItemDetailsContainer","ArrowContainer","PriceContainer","CartItem","cartItem","imageUrl","price","name","quantity","mapDispatchToProps","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,+BAApC;AAEA,SAASC,iBAAT,EAA4BC,aAA5B,EAA2CC,oBAA3C,EAAiEC,cAAjE,EAAiFC,cAAjF,QAAuG,oBAAvG;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWP,EAAAA,UAAX;AAAuBD,EAAAA;AAAvB,CAAD,KAAqC;AAAA,QAC3CS,QAD2C,GACPD,QADO,CAC3CC,QAD2C;AAAA,QACjCC,KADiC,GACPF,QADO,CACjCE,KADiC;AAAA,QAC1BC,IAD0B,GACPH,QADO,CAC1BG,IAD0B;AAAA,QACpBC,QADoB,GACPJ,QADO,CACpBI,QADoB;AAElD,SACA,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEH,QAApB;AAA8B,IAAA,GAAG,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBE,IAAxB,CADJ,EAEI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAE,MAAMV,UAAU,CAACO,QAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBI,QAAzB,CAFJ,EAGI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAE,MAAMZ,OAAO,CAACQ,QAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,UAGoFE,KAHpF,CAFJ,CAFJ,CADA;AAYF,CAdF;;AAgBA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,OAAO,EAAEe,IAAI,IAAID,QAAQ,CAACd,OAAO,CAACe,IAAD,CAAR,CADW;AAEpCd,EAAAA,UAAU,EAAEc,IAAI,IAAID,QAAQ,CAACb,UAAU,CAACc,IAAD,CAAX;AAFQ,CAAL,CAAnC;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCN,QAAlC,CAAf,C,CAEA;AACA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem, removeItem } from '../../redux/cart/cart.actions';\n\nimport { CartItemContainer, CartItemImage, ItemDetailsContainer, ArrowContainer, PriceContainer } from './cart-item.styles';\n\nconst CartItem = ({cartItem, removeItem, addItem}) => {\n    const {imageUrl, price, name, quantity } = cartItem;\n    return (\n    <CartItemContainer>\n        <CartItemImage src={imageUrl} alt='item'/>\n        <ItemDetailsContainer>\n            <span className='name'>{name}</span>\n            <PriceContainer className='price'>\n                <ArrowContainer onClick={() => removeItem(cartItem)}>&#10094;</ArrowContainer>\n                <span className='value'>{quantity}</span>\n                <ArrowContainer onClick={() => addItem(cartItem)}>&#10095;</ArrowContainer> x ${price}\n            </PriceContainer>\n        </ItemDetailsContainer>\n    </CartItemContainer>\n)};\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item)),\n    removeItem: item => dispatch(removeItem(item))\n})\n\nexport default connect(null, mapDispatchToProps)(CartItem);\n\n// onClick={() => removeItem(cartItem)}\n// onClick={() => addItem(cartItem)}"]},"metadata":{},"sourceType":"module"}