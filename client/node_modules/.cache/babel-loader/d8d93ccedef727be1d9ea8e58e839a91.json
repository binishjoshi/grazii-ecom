{"ast":null,"code":"var _jsxFileName = \"/home/phoenix/grazii-ecom/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionPage from '../../pages/collection/collection.component';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/phoenix/grazii-ecom/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionPage","CollectionOverviewContainer","WithSpinner","fetchCollectionsStartAsync","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","selectIsCollectionLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,2BAAP,MAAwC,oEAAxC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,MAAMC,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACtCC,EAAAA,iBAAiB,GAAG;AAAA,UACXJ,0BADW,GACoB,KAAKK,KADzB,CACXL,0BADW;AAEnBA,IAAAA,0BAA0B;AAC1B;;AAEDM,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKD,KADnC;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,kBADP,eACOA,kBADP;AAER,WACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAFrB;AAGC,MAAA,SAAS,EAAEX,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAES,KAAK,CAACE,IAAK,gBADrB;AAEC,MAAA,MAAM,EACJJ,KAAD,IACA,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAG,CAACG;AAAxC,SAAiEH,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADH;AAeA;;AAvBqC;;AA0BvC,MAAMK,eAAe,GAAGd,wBAAwB,CAAC;AAChDY,EAAAA,kBAAkB,EAAEG;AAD4B,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACvCb,EAAAA,0BAA0B,EAAE,MAAMa,QAAQ,CAACb,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionPage from '../../pages/collection/collection.component';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\tcomponentDidMount() {\n\t\tconst { fetchCollectionsStartAsync } = this.props;\n\t\tfetchCollectionsStartAsync();\n\t}\n\n\trender() {\n\t\tconst { match, isCollectionLoaded } = this.props;\n\t\treturn (\n\t    <div className='shop-page'>\n\t        <Route \n\t        \texact \n\t        \tpath={`${match.path}`} \n\t        \tcomponent={CollectionOverviewContainer} \n\t        />\n\t        <Route \n\t        \tpath={`${match.path}/:collectionId`} \n\t        \trender={\n\t        \t\t(props) => \n\t        \t\t<CollectionPageWithSpinner isLoading={ !isCollectionLoaded } {...props} /> } \n\t        />\n\t    </div>\n\t\t);\n\t}\n} \n\nconst mapStateToProps = createStructuredSelector({\n\tisCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}