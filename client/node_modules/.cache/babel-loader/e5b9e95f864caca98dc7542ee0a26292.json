{"ast":null,"code":"var _jsxFileName = \"/home/phoenix/grazii-ecom/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionPage from '../../pages/collection/collection.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/phoenix/grazii-ecom/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionPage","CollectionOverview","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","render","match","props","path","mapDispatchToProps","dispatch","updateCollections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAgB,+BAAhB;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,uBADsC,GACZ,IADY;AAAA;;AAGtCC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAC1C,YAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,KAHD;AAIA;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACAC,KADA,GACU,KAAKC,KADf,CACAD,KADA;AAER,WACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH;AAMA;;AApBqC;;AAuBvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCC,EAAAA,iBAAiB,EAAET,cAAc,IAAIQ,QAAQ,CAACC,iBAAiB,CAACT,cAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAeR,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionPage from '../../pages/collection/collection.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n\tunsubscribeFromSnapshot = null;\n\n\tcomponentDidMount() {\n\t\tconst collectionRef = firestore.collection('collections');\n\n\t\tcollectionRef.onSnapshot(async snapshot => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tconsole.log(collectionsMap);\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { match } = this.props;\n\t\treturn (\n\t    <div className='shop-page'>\n\t        <Route exact path={`${match.path}`} component={CollectionOverview} />\n\t        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n\t    </div>\n\t\t);\n\t}\n} \n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}