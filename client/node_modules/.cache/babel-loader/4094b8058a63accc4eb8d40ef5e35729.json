{"ast":null,"code":"import _objectSpread from \"/home/phoenix/grazii-ecom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nexport function* getSnapshotFromAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuth(userAuth);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, singOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}\n;","map":{"version":3,"sources":["/home/phoenix/grazii-ecom/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapshotFromAuth","userAuth","userRef","userSnapshot","get","id","data","e","isUserAuthenticated","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","signOut","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","singOut","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { \n\tauth, \n\tgoogleProvider, \n\tcreateUserProfileDocument,\n\tgetCurrentUser\n} from '../../firebase/firebase.utils';\n\nimport { \n\tsignInSuccess, \n\tsignInFailure,\n\tsignOutSuccess,\n\tsignOutFailure\n} from './user.actions';\n\nexport function* getSnapshotFromAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n}\n\nexport function* isUserAuthenticated() {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) return;\n\t\tyield getSnapshotFromAuth(userAuth);\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n};\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromAuth(user);\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n};\n\nexport function* signInWithEmail({ payload: { email, password} }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\t\t\n\t\tyield getSnapshotFromAuth(user);\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n};\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport function* signOut () {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch(e) {\n\t\tyield put(signOutFailure(e));\n\t}\n}\n\nexport function* onCheckUserSession() {\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, )\n};\n\nexport function* onSignOutStart() {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, singOut)\n}\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(isUserAuthenticated),\n\t\tcall(onSignOutStart),\n\t]);\n};"]},"metadata":{},"sourceType":"module"}