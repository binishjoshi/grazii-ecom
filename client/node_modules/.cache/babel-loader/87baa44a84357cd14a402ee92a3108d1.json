{"ast":null,"code":"import _objectSpread from \"/home/phoenix/grazii-ecom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* getSnapshotFromAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["/home/phoenix/grazii-ecom/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","getSnapshotFromAuth","userAuth","userRef","userSnapshot","get","id","data","e","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,SACCC,aADD,EAECC,aAFD,QAGO,gBAHP;AAKA,OAAO,UAAUC,mBAAV,CAA8BC,QAA9B,EAAwC;AAC9C,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BI,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,aAAa;AAAGO,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACA,GAJD,CAIE,OAAMC,CAAN,EAAS;AACV,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,CAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AAAA,iBACc,MAAMb,IAAI,CAACc,eAAL,CAAqBb,cAArB,CADpB;AAAA,UACKc,IADL,QACKA,IADL;;AAEH,UAAMV,mBAAmB,CAACU,IAAD,CAAzB;AACA,GAHD,CAGE,OAAMH,CAAN,EAAS;AACV,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,CAAD,CAAd,CAAT;AACA;AACD;AAAA;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AACjE,MAAI;AAAA,kBACc,MAAMnB,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADpB;AAAA,UACKJ,IADL,SACKA,IADL;;AAEH,UAAMV,mBAAmB,CAACU,IAAD,CAAzB;AACA,GAHD,CAGE,OAAMH,CAAN,EAAS;AACV,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,CAAD,CAAd,CAAT;AACA;AACD;AAAA;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACtC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACA;AAAA;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACrC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACA;AAAA;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC5B,QAAM5B,GAAG,CAAC,CACTC,IAAI,CAACuB,mBAAD,CADK,EAETvB,IAAI,CAACyB,kBAAD,CAFK,CAAD,CAAT;AAIA;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport { \n\tsignInSuccess, \n\tsignInFailure,\n} from './user.actions';\n\nexport function* getSnapshotFromAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n}\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromAuth(user);\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n};\n\nexport function* signInWithEmail({ payload: { email, password} }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\t\t\n\t\tyield getSnapshotFromAuth(user);\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n};\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart)\n\t]);\n};"]},"metadata":{},"sourceType":"module"}