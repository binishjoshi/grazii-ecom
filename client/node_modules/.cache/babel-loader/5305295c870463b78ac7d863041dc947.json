{"ast":null,"code":"import _objectSpread from \"/home/phoenix/grazii-ecom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.actions';\nexport function* getSnapshotFromAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuth(userAuth);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromAuth(user, additionalData);\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (e) {\n    yield put(signUpFailure(e));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n;\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}\n;","map":{"version":3,"sources":["/home/phoenix/grazii-ecom/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","getSnapshotFromAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","e","isUserAuthenticated","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","signInAfterSignUp","signUp","displayName","createUserWithEmailAndPassword","signOut","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { \n\tauth, \n\tgoogleProvider, \n\tcreateUserProfileDocument,\n\tgetCurrentUser\n} from '../../firebase/firebase.utils';\n\nimport { \n\tsignInSuccess, \n\tsignInFailure,\n\tsignOutSuccess,\n\tsignOutFailure,\n\tsignUpFailure,\n\tsignUpSuccess\n} from './user.actions';\n\nexport function* getSnapshotFromAuth(userAuth, additionalData) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n}\n\nexport function* isUserAuthenticated() {\n\ttry {\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif (!userAuth) return;\n\t\tyield getSnapshotFromAuth(userAuth);\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n};\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromAuth(user);\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n};\n\nexport function* signInWithEmail({ payload: { email, password} }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\t\t\n\t\tyield getSnapshotFromAuth(user);\n\t} catch(e) {\n\t\tyield put(signInFailure(e));\n\t}\n};\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport function* signInAfterSignUp({ payload: { user, additionalData }}) {\n\tyield getSnapshotFromAuth(user, additionalData);\n};\n\nexport function* signUp({ payload: { email, password, displayName }}) {\n\ttry {\n\t  const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n\t  yield put(signUpSuccess({ user, additionalData: { displayName } }))\n\t} catch(e) {\n\t\tyield put(signUpFailure(e));\n\t}\n};\n\nexport function* signOut () {\n\ttry {\n\t\tyield auth.signOut();\n\t\tyield put(signOutSuccess());\n\t} catch(e) {\n\t\tyield put(signOutFailure(e));\n\t}\n}\n\nexport function* onCheckUserSession() {\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, )\n};\n\nexport function* onSignOutStart() {\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n\tyield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n};\n\nexport function* onSignUpSuccess() {\n\tyield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart),\n\t\tcall(isUserAuthenticated),\n\t\tcall(onSignOutStart),\n\t\tcall(onSignUpStart),\n\t\tcall(onSignUpSuccess),\n\t]);\n};"]},"metadata":{},"sourceType":"module"}