{"ast":null,"code":"var _jsxFileName = \"/home/phoenix/grazii-ecom/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(ButtonsBarContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/phoenix/grazii-ecom/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","auth","googleSignInStart","FormInput","CustomButton","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","value","name","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions'\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {\n    SignInContainer,\n    SignInTitle,\n    ButtonsBarContainer\n  } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { email, password } = this.state;\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            this.setState({ email: '', password: '' })\n        } catch(error) {\n            console.log(error);\n        }\n\n\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target; \n\n        this.setState({ [name]: value})\n    }\n\n    render() {\n        const { googleSignInStart } = this.props;\n        return (\n            <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={this.handleChange}\n            value={this.state.email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label='password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton\n                type='button' \n                onClick={googleSignInStart} \n                isGoogleSignIn\n            >\n              Sign in with Google\n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>        \n)\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}